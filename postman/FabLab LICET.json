{
	"info": {
		"_postman_id": "0c1516a9-cd60-46d1-aa26-a48acb1622a3",
		"name": "FabLab LICET",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38885923"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "/user/register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Eileen\",\r\n    \"email\" : \"prinslaeileen@gmail.com\",\r\n    \"regNo\" : \"311122104036\",\r\n    \"password\" : \"eileen\",\r\n    \"role\" : \"student\",\r\n    \"year\" : \"3\",\r\n    \"contact\" : \"9344241919\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "user/read/{id}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/read/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"read",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/read/all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/read/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"read",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/update/email/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/update/email/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update",
								"email",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/update/password/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/update/password/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update",
								"password",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/update/contact/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/update/contact/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update",
								"contact",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/update/name/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/update/name/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update",
								"name",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/update/year/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/update/year/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update",
								"year",
								"{id}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Techie",
			"item": [
				{
					"name": "/techie/read/all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/techie/read/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"techie",
								"read",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/techie/register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Eileen\",\r\n    \"email\" : \"prinslaeileen@gmail.com\",\r\n    \"password\" : \"eileen\",\r\n    \"role\" : \"student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/techie/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"techie",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/techie/update/email/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/techie/update/email/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"techie",
								"update",
								"email",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/techie/update/password/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/techie/update/password/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"techie",
								"update",
								"password",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/techie/update/name/{id}",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/techie/update/name/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"techie",
								"update",
								"name",
								"{id}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "/users/authenticate",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"prinslaeileen@gmail.com\",\r\n    \"password\" : \"eileen\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "/admin/register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Eileen\",\r\n    \"email\" : \"prinslaeileen@gmail.com\",\r\n    \"password\" : \"eileen\",\r\n    \"role\" : \"student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "/book/request",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/book/request?userID=&slotID=&date&modelFile&description&deadline&specification&countFile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"book",
								"request"
							],
							"query": [
								{
									"key": "userID",
									"value": ""
								},
								{
									"key": "slotID",
									"value": ""
								},
								{
									"key": "date",
									"value": null
								},
								{
									"key": "modelFile",
									"value": null
								},
								{
									"key": "description",
									"value": null
								},
								{
									"key": "deadline",
									"value": null
								},
								{
									"key": "specification",
									"value": null
								},
								{
									"key": "countFile",
									"value": null
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "book/read/{bookingID}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/book/read/{bookingID}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"book",
								"read",
								"{bookingID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/book/read/all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/book/read/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"book",
								"read",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/book/delete/{bookingID}",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/book/delete/{bookingID}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"book",
								"delete",
								"{bookingID}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Slot",
			"item": [
				{
					"name": "/slot/create",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/slot/create?slotName&slotID&image",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"slot",
								"create"
							],
							"query": [
								{
									"key": "slotName",
									"value": null
								},
								{
									"key": "slotID",
									"value": null
								},
								{
									"key": "image",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/slot/read/{id}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/slot/read/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"slot",
								"read",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/slot/delete/{id}",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/slot/delete/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"slot",
								"delete",
								"{id}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TCBooking",
			"item": [
				{
					"name": "/tcbook/request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\" : \"\",\r\n    \"slotID\" : \"\",\r\n    \"date\" : \"\",\r\n    \"purpose\" : \"\",\r\n    \"slotDate\" : \"\",\r\n    \"startTime\" : \"\",\r\n    \"endTime\" : \"\",\r\n    \"memberCount\" : \"\", \r\n    \"tcTeam\" : [\r\n\r\n        {\r\n            \"name\" : \"\",\r\n            \"email\" : \"\",\r\n            \"regno\" : \"\"\r\n        },\r\n\r\n        {\r\n            \"name\" : \"\",\r\n            \"email\" : \"\",\r\n            \"regno\" : \"\"\r\n        }\r\n\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tcbook/request",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tcbook",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tcbook/read/{tcbookingID}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tcbook/read/{tcbookingID}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tcbook",
								"read",
								"{tcbookingID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tcbook/read/all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tcbook/read/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tcbook",
								"read",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tcbook/delete/{tcbookingID}",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tcbook/delete/{tcbookingID}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tcbook",
								"delete",
								"{tcbookingID}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}